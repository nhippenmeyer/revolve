version: 2.1

defaults: &defaults
  docker:
    - image: circleci/node:10.16.0
    - image: circleci/postgres:11.3-alpine
      environment:
        POSTGRES_DB: revolve_test
        POSTGRES_PASSWORD: revolve
        POSTGRES_USER: revolve

steps:
  - &add-ssh-keys
    add_ssh_keys:
      fingerprints:
        - 9b:ec:eb:e3:eb:83:19:27:6e:cf:81:7e:ef:c8:ec:00

  - &restore-cache
    restore_cache:
      keys:
        - v2-node-packages-{{ checksum "~/project/package-lock.json" }}
        - v2-node-packages-

  - &save-cache
    save_cache:
      key: v2-node-packages-{{ checksum "~/project/package-lock.json" }}
      paths:
        - ~/node_modules

  - &install-dependencies
    run:
      name: Install node packages
      command: npm install

  - &build-application
    run:
      name: Build application
      command: npm run build

jobs:
  lint:
    <<: *defaults
    steps:
      - checkout
      - *restore-cache
      - *install-dependencies
      - *save-cache
      - *build-application
      - run:
          name: Run linter
          command: npm run lint

  test:
    <<: *defaults
    steps:
      - checkout
      - *restore-cache
      - *install-dependencies
      - *save-cache
      - *build-application
      - run:
          name: Install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz &&
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz &&
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run unit tests
          command: npm test

workflows:
  version: 2
  lint-and-test:
    jobs:
      - lint
      - test:
          requires:
            - lint
